% Task 2: Relational Data
% Используемое представление: four.pl
% Вариант 1

group(102,['Петров','Ивановский','Биткоинов','Шарпин','Эксель','Текстописов','Криптовалютников','Азурин','Круглотличников']).
group(101,['Петровский','Сидоров','Мышин','Безумников','Густобуквенникова']).
group(104,['Иванов','Запорожцев','Джаво','Фулл','Круглосчиталкин','Блокчейнис']).
group(103,['Сидоркин','Эфиркина','Сиплюсплюсов','Программиро','Клавиатурникова','Решетников','Текстописова','Вебсервисов']).
subject('Логическое программирование',[grade('Петров',4),grade('Петровский',2),grade('Иванов',5),grade('Ивановский',5),grade('Запорожцев',5),grade('Сидоров',2),grade('Сидоркин',4),grade('Биткоинов',4),grade('Эфиркина',3),grade('Сиплюсплюсов',4),grade('Программиро',4),grade('Джаво',2),grade('Клавиатурникова',5),grade('Мышин',3),grade('Фулл',5),grade('Безумников',5),grade('Шарпин',5),grade('Круглосчиталкин',4),grade('Решетников',5),grade('Эксель',4),grade('Текстописов',4),grade('Текстописова',5),grade('Густобуквенникова',5),grade('Криптовалютников',5),grade('Блокчейнис',3),grade('Азурин',5),grade('Вебсервисов',5),grade('Круглотличников',3)]).
subject('Математический анализ',[grade('Петров',2),grade('Петровский',4),grade('Иванов',4),grade('Ивановский',4),grade('Запорожцев',4),grade('Сидоров',5),grade('Сидоркин',4),grade('Биткоинов',5),grade('Эфиркина',4),grade('Сиплюсплюсов',5),grade('Программиро',3),grade('Джаво',4),grade('Клавиатурникова',3),grade('Мышин',5),grade('Фулл',4),grade('Безумников',3),grade('Шарпин',4),grade('Круглосчиталкин',4),grade('Решетников',5),grade('Эксель',3),grade('Текстописов',4),grade('Текстописова',4),grade('Густобуквенникова',5),grade('Криптовалютников',4),grade('Блокчейнис',3),grade('Азурин',5),grade('Вебсервисов',4),grade('Круглотличников',5)]).
subject('Функциональное программирование',[grade('Петров',3),grade('Петровский',5),grade('Иванов',4),grade('Ивановский',3),grade('Запорожцев',3),grade('Сидоров',3),grade('Сидоркин',4),grade('Биткоинов',5),grade('Эфиркина',5),grade('Сиплюсплюсов',5),grade('Программиро',4),grade('Джаво',5),grade('Клавиатурникова',5),grade('Мышин',5),grade('Фулл',4),grade('Безумников',5),grade('Шарпин',3),grade('Круглосчиталкин',3),grade('Решетников',4),grade('Эксель',4),grade('Текстописов',3),grade('Текстописова',4),grade('Густобуквенникова',4),grade('Криптовалютников',5),grade('Блокчейнис',5),grade('Азурин',4),grade('Вебсервисов',4),grade('Круглотличников',4)]).
subject('Информатика',[grade('Петров',4),grade('Петровский',3),grade('Иванов',3),grade('Ивановский',4),grade('Запорожцев',3),grade('Сидоров',4),grade('Сидоркин',4),grade('Биткоинов',4),grade('Эфиркина',3),grade('Сиплюсплюсов',2),grade('Программиро',4),grade('Джаво',5),grade('Клавиатурникова',4),grade('Мышин',5),grade('Фулл',3),grade('Безумников',4),grade('Шарпин',5),grade('Круглосчиталкин',5),grade('Решетников',4),grade('Эксель',4),grade('Текстописов',3),grade('Текстописова',5),grade('Густобуквенникова',3),grade('Криптовалютников',2),grade('Блокчейнис',4),grade('Азурин',5),grade('Вебсервисов',4),grade('Круглотличников',4)]).
subject('Английский язык',[grade('Петров',4),grade('Петровский',5),grade('Иванов',3),grade('Ивановский',4),grade('Запорожцев',4),grade('Сидоров',5),grade('Сидоркин',3),grade('Биткоинов',5),grade('Эфиркина',5),grade('Сиплюсплюсов',5),grade('Программиро',4),grade('Джаво',4),grade('Клавиатурникова',3),grade('Мышин',5),grade('Фулл',4),grade('Безумников',3),grade('Шарпин',4),grade('Круглосчиталкин',4),grade('Решетников',2),grade('Эксель',4),grade('Текстописов',4),grade('Текстописова',5),grade('Густобуквенникова',5),grade('Криптовалютников',5),grade('Блокчейнис',3),grade('Азурин',2),grade('Вебсервисов',4),grade('Круглотличников',4)]).
subject('Психология',[grade('Петров',5),grade('Петровский',3),grade('Иванов',3),grade('Ивановский',3),grade('Запорожцев',5),grade('Сидоров',3),grade('Сидоркин',5),grade('Биткоинов',4),grade('Эфиркина',5),grade('Сиплюсплюсов',5),grade('Программиро',3),grade('Джаво',4),grade('Клавиатурникова',4),grade('Мышин',4),grade('Фулл',4),grade('Безумников',2),grade('Шарпин',3),grade('Круглосчиталкин',2),grade('Решетников',4),grade('Эксель',3),grade('Текстописов',3),grade('Текстописова',5),grade('Густобуквенникова',4),grade('Криптовалютников',5),grade('Блокчейнис',5),grade('Азурин',3),grade('Вебсервисов',5),grade('Круглотличников',4)]).

% Задание 1: Получить таблицу групп и средний балл по каждой из групп

    % Считает сумму. Используется для вычисления среднего.
    sum([], 0).
    sum([X|Y], S) :-
        sum(Y, S1),
        S is S1 + X.

    % Считает среднее. Используется для подсчета среднего балла.
    avg(L, R) :-
        length(L, Len),
        sum(L, Sum),
        R is Sum / Len.

    % Выдает оценки все студента. 
    grades(Student, N) :-
        subject(_, X),
        member(grade(Student, N), X).

    % Среднее по всем предметам, оценкам определенного студента.
    stud_to_overall_avg(Student, Res) :-
        findall(N, grades(Student, N), List),
        avg(List, Res).

    % Средний балл каждого студента в определенной группе.
    group_to_every_studs_avg(Group, Res) :-
        group(Group, StudList),
        member(Stud, StudList),
        stud_to_overall_avg(Stud, Res).

    % В каждой группе считаем сумму средних баллов всех ее студентов. Считаем среднее арифм. этой суммы. Выводим результат.
    groups_avg() :-
        group(Group, _),
        findall(Res, group_to_every_studs_avg(Group, Res), ListValue),
        avg(ListValue, Ans),
        write('Группа №'), write(Group), write(', средний бал: '), write(Ans), write('\n'), fail.

% Задание 2: Для каждого предмета получить список студентов, не сдавших экзамен (grade=2)

    % Находит имена студентов, имеющих двойки по опред. предмету
    subj_to_failed_studs(Subj, Name) :-
        subject(Subj, Students),
        member(grade(Name, 2), Students).

    % По каждому предмету выводит список несдавших его студентов, если такие имеются
    subj_failed() :-
        subject(Subj, _),
        findall(Name, subj_to_failed_studs(Subj, Name), List),
        length(List, ListLen),
        write('Предмет "'), write(Subj), 
            ((ListLen \= 0, write('" не сдали: '), write(List), write('\n'));
            (ListLen == 0, write('" сдали все!\n'))),
            fail.

% Задание 3 Найти количество не сдавших студентов в каждой из групп

    % Студенты с неудами в опред. группе
    group_subj_to_failed_studs(Group, Stud) :-
        subject(_, GradesList),
        group(Group, StudsList),
        member(Stud, StudsList),
        member(grade(Stud, 2), GradesList).

    % Кол-во студентов с недуами в опред. группе
    group_to_cnt_failed(Group, Cnt) :-
        findall(Name, group_subj_to_failed_studs(Group, Name), List),
        length(List, Cnt).

    % В каждой группе считает число студентов с неудами
    cnt_failed() :-
        group(Group, _),
        group_to_cnt_failed(Group, Cnt),
        write('Группа №'), write(Group), write(', число несдавших: '), write(Cnt), write('\n'), fail.
